---
import { Image } from 'astro:assets';
import tags from 'content/tags';

interface Props {
  experience: {
    data: {
      title: string;
      role: string;
      slug?: string;
      location: string;
      date: Date;
      endDate?: Date;
      isActive?: boolean;
      current?: boolean;
      responsibilities: string[];
      tags: string[];
      achievements: string[];
      logo?: string;
      description?: string;
      url?: string;
    };
  };
  showAllDetails?: boolean;
}

const { experience, showAllDetails = false } = Astro.props;

// Create a map of tag slugs to tag data
const tagMap = new Map(tags.map(tag => [tag.slug, tag]));

// Calculate duration
function calculateDuration(startDate: Date, endDate?: Date): string {
  const end = endDate ? endDate : new Date();
  const start = startDate;

  let years = end.getFullYear() - start.getFullYear();
  let months = end.getMonth() - start.getMonth();

  if (months < 0) {
    years--;
    months += 12;
  }

  const parts = [];
  if (years > 0) {
    parts.push(`${years} ${years === 1 ? 'year' : 'years'}`);
  }
  if (months > 0) {
    parts.push(`${months} ${months === 1 ? 'month' : 'months'}`);
  }

  return parts.length > 0 ? parts.join(', ') : '1 month';
}

const duration = calculateDuration(experience.data.date, experience.data.endDate);
---

<article class="border-primary-100 rounded-lg border bg-white p-6 shadow-md transition-shadow hover:shadow-lg" id={experience.data.slug}>
  <div class="mb-4 flex flex-col md:flex-row md:items-start md:justify-between">
    <div class="flex items-start gap-4">
      <div class="bg-primary-50 border-primary-200 flex h-20 w-20 items-center justify-center overflow-hidden rounded border">
        {
          experience.data.logo ? (
            <Image src={experience.data.logo} alt="Company logo" class="h-full w-full object-contain" loading="lazy" width={64} height={64} />
          ) : (
            <span class="text-primary-400 text-center text-xs">
              <i data-feather="briefcase" class="h-6 w-6" />
            </span>
          )
        }
      </div>
      <div>
        <h3 class="text-primary-900 text-xl font-semibold">{experience.data.role}</h3>
        <h4 class="text-secondary-600 text-lg font-medium">
          {experience.data.title}
          {
            experience.data.url && (
              <a href={experience.data.url} target="_blank" rel="noopener noreferrer" class="text-secondary-500 hover:text-secondary-700 ml-2 transition-colors">
                <i data-feather="external-link" class="inline h-4 w-4" />
              </a>
            )
          }
        </h4>
        <p class="text-primary-600 text-sm">{experience.data.location}</p>
      </div>
    </div>
    <div class="text-right">
      <p class="text-primary-700 font-medium">
        {experience.data.date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' })}
        {experience.data.endDate && !experience.data.current ? ` - ${experience.data.endDate.toLocaleDateString('en-US', { month: 'short', year: 'numeric' })}` : ''}
        {experience.data.current ? ' - Present' : ''}
      </p>
      <p class="text-primary-600 mt-1 text-sm">
        {duration}
      </p>
      {experience.data.current && <span class="mt-1 inline-block rounded-full bg-green-100 px-2 py-1 text-xs text-green-800">Current</span>}
    </div>
  </div>

  {showAllDetails && experience.data.description && <p class="text-primary-700 mt-2 mb-8 max-w-2xl text-sm">{experience.data.description}</p>}

  <div class="grid gap-6 md:grid-cols-2">
    <div>
      <h5 class="text-primary-900 mb-3 font-medium">Key Responsibilities</h5>
      <ul class="space-y-2">
        {
          experience.data.responsibilities.slice(0, showAllDetails ? undefined : 3).map(responsibility => (
            <li class="text-primary-700 flex items-start gap-2 text-sm">
              <span data-feather="check" class="text-secondary-600 mt-0.5 h-4 w-4 flex-shrink-0" />
              {responsibility}
            </li>
          ))
        }
      </ul>

      {
        !showAllDetails && (
          <div class="mt-4">
            <a href={`/experience#${experience.data.slug}`} class="text-secondary-600 hover:text-secondary-700 group flex items-center gap-2 text-sm font-medium transition-colors">
              See more details <i data-feather="chevron-right" class="h-4 w-4 transition-transform group-hover:translate-x-1" />
            </a>
          </div>
        )
      }
    </div>

    <div>
      <h5 class="text-primary-900 mb-3 font-medium">Technologies & Tools</h5>
      <div class="flex flex-wrap gap-2">
        {
                  experience.data.tags.slice(0, showAllDetails ? undefined : 8).map(tagSlug => {
          const tag = tagMap.get(tagSlug);
                          return <span class="bg-primary-50 text-primary-700 border-primary-200 rounded border px-2 py-1 text-xs font-medium">{tag?.title || tagSlug}</span>;
          })
        }
      </div>

      {
        experience.data.achievements.length > 0 && (
          <div class="mt-4">
            <h5 class="text-primary-900 mb-2 font-medium">Key Achievements</h5>
            <ul class="space-y-1">
              {experience.data.achievements.map((achievement: string) => (
                <li class="text-primary-700 flex items-start gap-2 text-sm">
                  <span data-feather="award" class="text-secondary-600 mt-0.5 h-4 w-4 flex-shrink-0" />
                  {achievement}
                </li>
              ))}
            </ul>
          </div>
        )
      }
    </div>
  </div>
</article>
