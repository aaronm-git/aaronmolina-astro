---
import MainLayout from "@/layouts/main-layout.astro";
import { Image } from "astro:assets";
import { getCollection, render } from "astro:content";
import tags from "@/content/tags";

export async function getStaticPaths() {
	const projects = await getCollection("projects");
	return projects.map(p => ({
		params: { project: p.data.slug },
		props: { project: p },
	}));
}

const { project } = Astro.props;
const { Content } = await render(project);

// Create a map of tag slugs to tag data
const tagMap = new Map(tags.map(tag => [tag.slug, tag]));
---

<MainLayout title={project.data.title} description={project.data.description}>
	<article class="max-w-4xl mx-auto px-4 py-8">
		<!-- Project Header -->
		<header class="mb-8">
			<div class="flex items-center justify-between mb-4">
				<h1 class="text-4xl font-bold text-primary-900">
					{project.data.title}
				</h1>
				{
					project.data.pinned && (
						<span class="px-3 py-1 bg-secondary-100 text-secondary-800 text-sm font-semibold rounded-full flex-shrink-0">
							Featured Project
						</span>
					)
				}
			</div>

			<div class="flex items-center justify-between text-primary-600 mb-6">
				<div class="flex items-center gap-6">
					<a
						href="#project-details"
						class="flex items-center gap-2 text-secondary-600 hover:text-secondary-800 transition-colors"
					>
						<span class="text-sm font-medium flex items-center gap-2"
							><i data-feather="info" class="w-4 h-4"></i> Project Details</span
						>
					</a>
|
					{
						project.data.link && (
							<a
								href={project.data.link}
								target="_blank"
								rel="noopener noreferrer"
								class="flex items-center gap-2 text-secondary-600 hover:text-secondary-800 transition-colors"
							>
								<span class="text-sm font-medium">Visit Project</span>
								<svg
									class="w-4 h-4"
									fill="none"
									stroke="currentColor"
									viewBox="0 0 24 24"
								>
									<path
										stroke-linecap="round"
										stroke-linejoin="round"
										stroke-width="2"
										d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
									/>
								</svg>
							</a>
						)
					}
				</div>
			</div>

			{
				project.data.description && (
					<p class="text-xl text-primary-700 mb-6 leading-relaxed">
						{project.data.description}
					</p>
				)
			}

			{
				project.data.tags && project.data.tags.length > 0 && (
					<div class="flex flex-wrap gap-2 mb-6">
						{project.data.tags.map(tagSlug => {
							const tag = tagMap.get(tagSlug);
							return (
								<span class="px-3 py-1 bg-secondary-100 text-secondary-800 text-sm font-medium rounded-full">
									{tag?.title || tagSlug}
								</span>
							);
						})}
					</div>
				)
			}
		</header>

		<!-- Project Content -->
		{
			project.body && (
				<div class="typography max-w-none mb-8">
					<Content />
				</div>
			)
		}

		<!-- Project Details -->
		<div class="bg-primary-50 rounded-lg p-6 mb-8 border border-primary-200" id="project-details">
			<h2 class="text-lg font-semibold text-primary-900 mb-4">Project Details</h2>

			<div class="grid gap-4 md:grid-cols-2">
				{
					project.data.completedOn && (
						<div>
							<dt class="text-sm font-medium text-primary-600 mb-1">
								Completion Date
							</dt>
							<dd class="text-sm text-primary-900">
								{project.data.completedOn.toLocaleDateString("en-US", {
									year: "numeric",
									month: "long",
								})}
							</dd>
						</div>
					)
				}

				{
					project.data.link && (
						<div>
							<dt class="text-sm font-medium text-primary-600 mb-1">
								Project URL
							</dt>
							<dd class="text-sm">
								<a
									href={project.data.link}
									target="_blank"
									rel="noopener noreferrer"
									class="text-secondary-600 hover:text-secondary-800 break-all"
								>
									{project.data.link}
								</a>
							</dd>
						</div>
					)
				}

				{
					project.data.tags && project.data.tags.length > 0 && (
						<div class="md:col-span-2">
							<dt class="text-sm font-medium text-primary-600 mb-2">
								Technologies Used
							</dt>
							<dd class="flex flex-wrap gap-2">
								{project.data.tags.map(tagSlug => {
									const tag = tagMap.get(tagSlug);
									return (
										<span class="px-2 py-1 bg-white text-primary-700 text-xs rounded border border-primary-200">
											{tag?.title || tagSlug}
										</span>
									);
								})}
							</dd>
						</div>
					)
				}
			</div>
		</div>

		<!-- Project Footer -->
		<footer class="pt-8 border-t border-primary-200">
			<div class="flex justify-between items-center">
				<a
					href="/projects"
					class="text-secondary-600 hover:text-secondary-800 flex items-center gap-2"
				>
					<svg
						class="w-4 h-4"
						fill="none"
						stroke="currentColor"
						viewBox="0 0 24 24"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M15 19l-7-7 7-7"></path>
					</svg>
					Back to Projects
				</a>

				{
					project.data.link && (
						<a
							href={project.data.link}
							target="_blank"
							rel="noopener noreferrer"
							class="bg-secondary-600 hover:bg-secondary-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2"
						>
							<span>View Live Project</span>
							<svg
								class="w-4 h-4"
								fill="none"
								stroke="currentColor"
								viewBox="0 0 24 24"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
								/>
							</svg>
						</a>
					)
				}
			</div>
		</footer>
	</article>
</MainLayout>
